# SQL and HSQL queries that are database independent
#
#
# AlertService queries
#

#
AlertService.listAlerts = \
	select alert from com.flexnet.platform.entities.Alert alert, com.flexnet.platform.entities.AlertJobConfiguration config \
    where config.displayInUI = true and alert.dismissed = false and alert.alertType.type = config.alertType.type \
    and config.alertType.template is null and alert.tenantId_=:tenantId and alert.tenantId_ = config.tenantId_

AlertService.listSubscribedAlerts = \
	select inbox from com.flexnet.platform.entities.AlertInbox inbox inner join inbox.alert alert \
    where inbox.dismissed = false and inbox.status = :status and inbox.user.id = :userId \
    and inbox.tenantId_=:tenantId and alert.tenantId_ = inbox.tenantId_

AlertService.countAllAlerts = \
    select count(*) \
    from com.flexnet.platform.entities.Alert alert, \
         com.flexnet.platform.entities.AlertJobConfiguration config \
    where config.displayInUI = true \
      and alert.dismissed = false \
      and alert.alertType.type = config.alertType.type \
      and config.alertType.template is null \
      and alert.tenantId_=:tenantId and alert.tenantId_ = config.tenantId_
      
AlertService.countSubscribedAlerts = \
	select count(*) from com.flexnet.platform.entities.AlertInbox inbox \
	where inbox.dismissed = false and inbox.status = :status \
	and inbox.user.id = :userId and inbox.tenantId_=:tenantId 

AlertService.listAlertJobs = \
    select alertJob from com.flexnet.platform.entities.AlertJobConfiguration alertJob \
    where alertJob.alertType.template is null \
    and alertJob.active = true and alertJob.tenantId_=:tenantId
    
AlertService.countAlertJobs = \
	select count(*) from com.flexnet.platform.entities.AlertJobConfiguration alertJob \
	where alertJob.alertType.template is null \
	and alertJob.active = true and alertJob.tenantId_=:tenantId
    
# Starting with "from" without using a select is a form of short cut
AlertService.findJobConfiguration = \
	from com.flexnet.platform.entities.AlertJobConfiguration config \
	where config.alertType.type = :alertTypeName and config.alertType.template is null \
	and config.tenantId_=:tenantId
    
# This is a Quartz table, we don't have tenantId on this  
AlertService.findCronTriggerForAlertType = select TRIGGER_NAME, TRIGGER_GROUP,CRON_EXPRESSION,TIME_ZONE_ID \
	from PLT_QRTZ_CRON_TRIGGERS triggers \
	where triggers.TRIGGER_NAME = :alertTypeName 

AlertService.listAlertTypes = \
    from com.flexnet.platform.entities.AlertType at \
    where at.template is null 

AlertService.findAlertType = \
	from com.flexnet.platform.entities.AlertType at \
	where at.type = :alertType and at.template is null 
    
AlertService.findAlertsByType = \
	select alert from com.flexnet.platform.entities.Alert alert \
	where alert.alertType.type = :alertType and alert.dismissed = false \
	and alert.alertType.template is null and alert.tenantId_ = :tenantId
	
AlertService.findAlertsByTypeTemplate = \
	select alert from com.flexnet.platform.entities.AlertType alertType, com.flexnet.platform.entities.Alert alert \
	where alertType.type = :alertType and alert.alertType.fromAlertTypeTemplate.type = alertType.fromAlertTypeTemplate.type \
	and alert.dismissed = false and alertType.template is null \
	and alert.tenantId_=:tenantId

AlertService.findSubcriptionByUser = \
	from com.flexnet.platform.entities.AlertSubscription subscription \
	where subscription.subscriber.id = :userId \
	and subscription.tenantId_=:tenantId 

AlertService.findSubcriptionByUserAndTypeName = \
	from com.flexnet.platform.entities.AlertSubscription subscription \
	where subscription.alertType.type = :alertTypeName and subscription.subscriber.id = :userId \
	and subscription.alertType.template is null \
	and subscription.tenantId_=:tenantId 

AlertService.findSubcriptionByUserAndTypeId = \
	from com.flexnet.platform.entities.AlertSubscription subscription \
	where subscription.subscriber.id = :userId \
	and subscription.alertType.id = :alertTypeId \
	and subscription.tenantId_=:tenantId	

AlertService.listAlertHandlers = \
	from com.flexnet.platform.entities.AlertHandlerConfiguration handler \
	where handler.subscription.alertType.type = :alertTypeName \
	and handler.subscription.alertType.template is null \
    and handler.tenantId_=:tenantId

AlertService.listSubscribedAlertHandlers = \
	from com.flexnet.platform.entities.AlertHandlerConfiguration handler \
	where handler.subscription.alertType.type = :alertTypeName and handler.subscription.subscriber.id = :userId \
	and handler.subscription.alertType.template is null \
    and handler.tenantId_=:tenantId	

AlertService.listAlertInboxEntriesByAlert = \
	from com.flexnet.platform.entities.AlertInbox inbox \
	where inbox.alert.id = :alertId and inbox.dismissed = false \
    and inbox.tenantId_=:tenantId	

AlertService.dismissAlertInboxEntriesByUser = \
	update com.flexnet.platform.entities.AlertInbox inbox \
	set inbox.dismissed = true where inbox.user.id = :userId \
	and inbox.dismissed = false and inbox.tenantId_=:tenantId

AlertService.findAlertInboxEntry = \
	from com.flexnet.platform.entities.AlertInbox inbox \
	where inbox.alert.id = :alertId and inbox.user.id = :userId \
    and inbox.tenantId_=:tenantId

AlertService.findAlertHandlerByClassName = \
	from com.flexnet.platform.entities.AlertHandlerType \
	where handlerClass = :className and tenantId_=:tenantId
    
AlertService.listUnhandledAlerts = \
	from com.flexnet.platform.entities.Alert alert \
	where alert.dateLastHandled <= :maxHandlingDate and alert.alertType.type = :alertTypeName \
	and alert.dismissed = false and alert.alertType.template is null \
    and alert.tenantId_=:tenantId	

AlertService.listAlertTypeTemplates = \
    select config from com.flexnet.platform.entities.AlertJobConfiguration config \
    where config.alertType.template is not null \
    and config.tenantId_=:tenantId    

AlertService.findAlertTypeTemplate = \
	select config from com.flexnet.platform.entities.AlertJobConfiguration config \
	where config.alertType.template is not null and config.alertType.type = :alertTypeTemplateName \
    and config.tenantId_=:tenantId	

AlertService.listAlertTypesForTemplate = \
	select config from com.flexnet.platform.entities.AlertJobConfiguration config \
	where config.alertType.template is null and config.alertType.fromAlertTypeTemplate.type = :alertTypeTemplateName \
	and config.alertType.fromAlertTypeTemplate.template is not null \
    and config.tenantId_=:tenantId	

AlertService.listAlertHandlerTypesForTemplate = \
	select alertHandlerType from com.flexnet.platform.entities.AlertHandlerType alertHandlerType \
	where alertHandlerType.alertType.template is not null and alertHandlerType.alertType.type = :alertTypeTemplateName \
    and alertHandlerType.tenantId_=:tenantId	

AlertService.listAlertHandlerTypesForAlertType = \
	select alertHandlerType from com.flexnet.platform.entities.AlertHandlerType alertHandlerType \
	where alertHandlerType.alertType.template is null and alertHandlerType.alertType.type = :alertTypeName \
    and alertHandlerType.tenantId_=:tenantId	
 
#
# RoleService queries
#
com.flexnet.platform.bizobjects.Role = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Role AS obj JOIN obj.dataServiceContext_ AS dataServiceContext
 
#
# PermissionService queries
#
com.flexnet.platform.bizobjects.Category = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Category AS obj

com.flexnet.platform.bizobjects.Module = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Module AS obj

com.flexnet.platform.bizobjects.Permission = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Permission AS obj JOIN obj.category_ AS category JOIN obj.module_ AS module
 
#
# OrgUnitService queries
#
com.flexnet.platform.bizobjects.OrgUnit = \
	SELECT obj FROM com.flexnet.platform.bizobjects.OrgUnit AS obj \
	LEFT OUTER JOIN obj.belongsTo_ AS belongsTo LEFT OUTER JOIN obj.types_ AS types
 
OrgUnit.getOrgUnits1 = \
	SELECT obj FROM com.flexnet.platform.bizobjects.OrgUnit AS obj \
	LEFT OUTER JOIN obj.belongsTo_ AS belongsTo LEFT OUTER JOIN obj.types_ AS types \
	where (obj.name_ LIKE :obj_name_ OR obj.displayName_ LIKE :obj_displayName_) \
	AND (belongsTo.name_ LIKE :belongsTo_name_ OR belongsTo.displayName_ LIKE :belongsTo_displayName_) \
	AND obj.lineage_ LIKE :obj_lineage_ AND  obj.tenantId_=:tenantId
	
OrgUnit.getOrgUnits2 = \
	SELECT obj FROM com.flexnet.platform.bizobjects.OrgUnit AS obj \
	LEFT OUTER JOIN obj.belongsTo_ AS belongsTo LEFT OUTER JOIN obj.types_ AS types \
	where (obj.name_ LIKE :obj_name_ OR obj.displayName_ LIKE :obj_displayName_) \
	AND (belongsTo IS NULL OR belongsTo.name_ LIKE :belongsTo_name_ OR belongsTo.displayName_ LIKE :belongsTo_displayName_) \
	AND obj.lineage_ LIKE :obj_lineage_ AND obj.tenantId_=:tenantId
	
com.flexnet.platform.bizobjects.OrgUnitType = \
	SELECT obj FROM com.flexnet.platform.bizobjects.OrgUnitType AS obj

OrgUnit.getAllRootOrgUnits = \
	SELECT obj FROM com.flexnet.platform.bizobjects.OrgUnit AS obj \
	WHERE obj.belongsTo_ IS NULL AND obj.tenantId_=:tenantId
 
#
# UserService queries
#
com.flexnet.platform.bizobjects.AuthenticationScheme = \
	SELECT obj FROM com.flexnet.platform.bizobjects.AuthenticationScheme AS obj

com.flexnet.platform.bizobjects.Contact = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Contact AS obj

com.flexnet.platform.bizobjects.Contact2 = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Contact AS obj JOIN obj.belongsTo_ as orgContact JOIN orgContact.orgUnitId_ as org \
	where org.id = :org_id AND (obj.firstName_ LIKE :obj_firstName_ OR obj.lastName_ LIKE :obj_lastName_) \
    AND obj.tenantId_=:tenantId
	
com.flexnet.platform.bizobjects.Contact3 = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Contact AS obj JOIN obj.belongsTo_ as orgContact JOIN orgContact.orgUnitId_ as org \
	WHERE obj.tenantId_=:tenantId
	
com.flexnet.platform.bizobjects.User = \
	SELECT obj FROM com.flexnet.platform.bizobjects.User AS obj JOIN obj.contactInfo_ AS contactInfo \
	JOIN obj.contactInfo_.belongsTo_ AS orgContact JOIN orgContact.orgUnitId_ AS belongsTo JOIN obj.authenticationScheme_ AS authScheme JOIN obj.domain_ AS domain
	
UserService.countUsers = \
	SELECT count(*) FROM com.flexnet.platform.bizobjects.User AS obj JOIN obj.contactInfo_ AS contactInfo \
	JOIN obj.contactInfo_.belongsTo_ AS orgContact JOIN orgContact.orgUnitId_ AS belongsTo JOIN obj.authenticationScheme_ AS authScheme \
	JOIN obj.domain_ AS domain where obj.phantom_ = 0 \
	and  obj.tenantId_=:tenantId
		
UserService.uniqueUser= \
	SELECT obj FROM com.flexnet.platform.bizobjects.User AS obj JOIN obj.contactInfo_ AS contactInfo \
	JOIN obj.contactInfo_.belongsTo_ AS orgContact JOIN orgContact.orgUnitId_ AS belongsTo JOIN obj.authenticationScheme_ AS authScheme \
	JOIN obj.domain_ AS domain where UPPER(obj.userId_) = UPPER(:obj_userId_) and obj.domain_.id = :obj_domain__id
	and  obj.tenantId_=:tenantId	

# distinct clause requires all columns to be in the SELECT list that can appear in the ORDER BY Clause. We allow 
# sorting on UI page for userId,  active, createDate, lastAuthTime and DisplayName columns.
UserService.listRoleUsers = \
	SELECT distinct obj, obj.userId_, obj.active_, obj.createDate_, obj.lastAuthenticatedTime_, contactInfo.firstName_   \
	FROM com.flexnet.platform.bizobjects.User AS obj JOIN obj.OrgUnitRoles_ AS orgroles JOIN orgroles.role AS roles \
	JOIN obj.contactInfo_ AS contactInfo JOIN obj.contactInfo_.belongsTo_ AS orgContact JOIN orgContact.orgUnitId_ AS belongsTo JOIN obj.authenticationScheme_ AS authScheme \
	JOIN obj.domain_ AS domain	
	
UserService.countRoleUsers = \
	SELECT count(distinct obj) FROM com.flexnet.platform.bizobjects.User AS obj JOIN obj.OrgUnitRoles_ AS orgroles \
	JOIN orgroles.role AS roles JOIN obj.contactInfo_ AS contactInfo JOIN obj.contactInfo_.belongsTo_ AS orgContact JOIN orgContact.orgUnitId_ AS belongsTo \
	JOIN obj.authenticationScheme_ AS authScheme JOIN obj.domain_ AS domain

UserService.getUsers = \
	SELECT obj FROM com.flexnet.platform.bizobjects.User AS obj JOIN obj.contactInfo_ AS contactInfo \
	JOIN obj.contactInfo_.belongsTo_ AS orgContact JOIN orgContact.orgUnitId_ AS belongsTo JOIN obj.authenticationScheme_ AS authScheme \
	JOIN obj.domain_ AS domain where obj.phantom_ = :obj_phantom_ \
	and  obj.tenantId_=:tenantId
		
UserService.countUsersUsingCustomAttrs = \
	SELECT count(*) FROM com.flexnet.platform.bizobjects.User AS obj JOIN obj.contactInfo_ AS contactInfo \
	JOIN obj.contactInfo_.belongsTo_ AS orgContact JOIN orgContact.orgUnitId_ AS belongsTo JOIN obj.authenticationScheme_ AS authScheme JOIN obj.domain_ AS domain \
	JOIN obj.extendedPropertySet.properties as ep JOIN ep.metadata_ as md \
	where obj.phantom_ = 0 and md.name = :ep_name \
	and ep.textValue like :ep_textValue and obj.tenantId_=:tenantId
		
UserService.searchUsersUsingCustomAttrs = \
	SELECT obj FROM com.flexnet.platform.bizobjects.User AS obj JOIN obj.contactInfo_ AS contactInfo \
	JOIN obj.contactInfo_.belongsTo_ AS orgContact JOIN orgContact.orgUnitId_ AS belongsTo JOIN obj.authenticationScheme_ AS authScheme \
	JOIN obj.domain_ AS domain JOIN obj.extendedPropertySet.properties as ep JOIN ep.metadata_ as md \
	where obj.phantom_ = :obj_phantom_ and md.name = :ep_name and ep.textValue like :ep_textValue \
	and obj.tenantId_=:tenantId
		
#
# GroupService queries
#
com.flexnet.platform.bizobjects.Group = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Group AS obj

Group.getGroupByName = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Group AS obj WHERE UPPER(obj.groupName_) = UPPER(:obj_groupName_) \
	and obj.domain_.id = :groupDomainId	and obj.tenantId_=:obj_tenantId_


#
# Extended Property Set queries
#
ExtendedPropertyMetadata.listExtendedPropertyMetadata = \
	SELECT ExtPropMetadata FROM com.flexnet.platform.bizobjects.ExtendedPropertyMetadata AS ExtPropMetadata
	
ExtendedPropertyMetadata.listExtendedPropertyByMetadata= \
	select ep from com.flexnet.platform.bizobjects.ExtendedProperty as ep \
	where ep.metadata_.id=:epmetadata and ep.tenantId_=:tenantId
	
ExtendedPropertyMetadata.listExtendedPropertyNotNullRecordsByMetadata= \
	select ep from com.flexnet.platform.bizobjects.ExtendedProperty as ep \
	where ep.metadata_.id=:epmetadata and ep.tenantId_=:tenantId and \
	(ep.longTextValue is not null or ep.textValue is not null or ep.numberValue is not null or ep.dateValue is not null or ep.booleanValue is not null)
	

ExtendedPropertyMetadata.getExtendedPropertyBySubgroup= \
	select ep from com.flexnet.platform.bizobjects.ExtendedProperty as ep \
	join ep.metadata_ as epmeta join ep.belongsToSet as epset \
	where epmeta.name=:name and epmeta.subgroupName=:subgroupName \
	and ep.belongsToSet=:epset
	
ExtendedPropertyMetadata.getReportingOrderCount= \
	select ExtPropMetadata.reportingOrder from com.flexnet.platform.bizobjects.ExtendedPropertyMetadata as ExtPropMetadata  \
	where ExtPropMetadata.neededForReporting <> 0 \
	and ExtPropMetadata.tenantId_=:tenant_name and ExtPropMetadata.className=:classname \
 	and ExtPropMetadata.tenantId_=:tenantId
 		
ExtendedPropertyMetadata.getLastReportingOrderForEachEntity= \
	select ExtPropMetadata.className, \
	(CASE WHEN count(ExtPropMetadata.neededForReporting) < 30 THEN 'true' \
	WHEN count(ExtPropMetadata.neededForReporting) >= 30 THEN 'false' END) \
	from  com.flexnet.platform.bizobjects.ExtendedPropertyMetadata as ExtPropMetadata  \
	where ExtPropMetadata.neededForReporting=:neededForReporting and ExtPropMetadata.tenantId_=:tenantId \
	and ExtPropMetadata.className not in ('com.flexnet.operations.services.File','com.flexnet.operations.services.DownloadPackage') \
	group by ExtPropMetadata.className 

#
# Extended Property queries
#
ExtendedProperty.updateLastUpdated= \
	UPDATE PLT_EXTPROP SET LASTUPDATED=? WHERE ID=? AND TENANT_ID=?

ExtPropMetadata.getValidValues=SELECT validValue FROM  com.flexnet.platform.bizobjects.ValidValue as validValue \
	where validValue.metadata.id=? and validValue.tenantId_=:tenantId
#
# ConfigService queries
# This refers to the old PLT_CONFIGGROUP table that used to store xml files
ConfigService.listConfigGroups = \
	SELECT ConfigGroup FROM com.flexnet.platform.entities.ConfigGroup AS ConfigGroup \
	ORDER BY ConfigGroup.fileName

#
# DataService queries
# What is this thing? Is it in use?
com.flexnet.platform.bizobjects.DataService = \
	SELECT obj FROM com.flexnet.platform.bizobjects.DataService AS obj JOIN obj.module_ AS module

#
# Domain queries
#
com.flexnet.platform.bizobjects.Domain = \
	SELECT obj FROM com.flexnet.platform.bizobjects.Domain AS obj

Domain.filterUsers = \
	select obj from com.flexnet.platform.bizobjects.User AS obj \
	where obj.domain_.name_ = :domainName and obj.contactInfo_.displayName_ like :displayNameFilter \
	and obj.phantom_ = 0 and obj.tenantId_=:tenantId
	
Domain.filterGroups = \
	select obj from com.flexnet.platform.bizobjects.Group AS obj \
	where obj.domain_.name_ = :domainName and obj.groupName_ like :displayNameFilter \
	and obj.tenantId_=:tenantId
		
Domain.getDomainNames = \
	select domain.name_ from com.flexnet.platform.bizobjects.Domain as domain  \
	WHERE domain.tenantId_=:tenantId

	