#get Line item family using any leaf node id
#its a SQL
#XXXXX native SQL
ActivatableItem.getRelatedLineItemUsingAnyLeafId= WITH \
    top_parent (ID, PARENT_LINE_ITEM) AS \
    ( \
         SELECT a.ID, a.PARENT_LINE_ITEM FROM OPS_ACTIVATABLE_ITEM a WHERE ID = :leafNode AND a.TENANT_ID=:tenantId \
         UNION ALL \
         SELECT b.id, b.PARENT_LINE_ITEM FROM OPS_ACTIVATABLE_ITEM b INNER JOIN top_parent  c ON c.PARENT_LINE_ITEM = b.id WHERE b.TENANT_ID=:tenantId \
    ), \
    get_all_nodes ( ID, PARENT_LINE_ITEM ) AS  \
    ( \
         SELECT a.ID, a.PARENT_LINE_ITEM FROM OPS_ACTIVATABLE_ITEM a WHERE ID = (select id from top_parent where PARENT_LINE_ITEM is null) AND  a.TENANT_ID=:tenantId \
         UNION ALL \
         SELECT b.id, b.PARENT_LINE_ITEM FROM OPS_ACTIVATABLE_ITEM b INNER JOIN get_all_nodes c ON c.ID = b.PARENT_LINE_ITEM WHERE b.TENANT_ID=:tenantId \
    ) \
    select id from get_all_nodes OPTION (MAXRECURSION 16384)
    
EntitlementLineItemBO.getFulfillmentsCount = SELECT top 1 activationInstance.ID as ID FROM OPS_ACTIVATION_INSTANCE activationInstance \
      WHERE activationInstance.ENTITLEMENT_LINEITEM=:lineItemId \
      AND activationInstance.TENANT_ID=:tenantId

GROUP.deleteRoles= DELETE PLT_GROUP_ROLE \
      WHERE PLT_GROUP_ROLE.GROUP_ID=:GROUP_ID \
      AND (PLT_GROUP_ROLE.TENANT_ID=:tenantId OR PLT_GROUP_ROLE.TENANT_ID IS NULL)

Role.deletePermissions = DELETE PLT_ROLE_PERMISSION \
      WHERE PLT_ROLE_PERMISSION.GRANTEDBY_ID=:GRANTEDBY_ID \
AND (PLT_ROLE_PERMISSION.TENANT_ID=:tenantId OR PLT_ROLE_PERMISSION.TENANT_ID IS NULL)